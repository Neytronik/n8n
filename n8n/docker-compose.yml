version: '3.8'

services:

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_TRUST_PROXY=true
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_HOST}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-n8nadmin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-n8nadmin}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE:-postgres}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST:-db}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER:-postgres}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - DB_POSTGRESDB_SCHEMA=${DB_POSTGRESDB_SCHEMA:-n8n}
      - N8N_RUNNERS_ENABLED=true
      - N8N_WORKERS_COUNT=5 # Adjust as needed
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - N8N_REDIS_URL=redis:6379
      - EXECUTIONS_PROCESS=main
      - N8N_EXECUTIONS_MODE=queue
      - QUEUE_MODE=redis
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files
    networks:
      - shared_gateway

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379" # Optional: Expose Redis port if needed for external access
    volumes:
      - redis_data:/data
    networks:
      - shared_gateway

volumes:
  n8n_data:
  redis_data:

networks:
  shared_gateway:
    external: true